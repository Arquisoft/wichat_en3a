name: CI for wichat_en3a

on:
  release:
    types: [published]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '23'
    - run: mvn clean test --batch-mode
      working-directory: userservice
    - run: mvn clean test --batch-mode
      working-directory: hintservice
    - run: mvn clean test --batch-mode
      working-directory: wikidataservice
    - run: mvn clean test --batch-mode
      working-directory: webapp
    - name: Analyze with SonarCloud
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  e2e-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '23'
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.12.0
      with:
        mongodb-version: '8.0'
    - name: Start User Service
      run: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=e2e" &
      working-directory: userservice

    - name: Start Hint Service
      run: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=e2e" &
      working-directory: hintservice

    - name: Start Wikidata Service
      run: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=e2e" &
      working-directory: wikidataservice

    - name: Start Web App
      run: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=e2e" &
      working-directory: webapp
    - name: Wait for Services to Start
      run: sleep 300 
    - run: mvn clean verify --batch-mode
      working-directory: userservice
    - run: mvn clean verify --batch-mode
      working-directory: hintservice
    - run: mvn clean verify --batch-mode
      working-directory: wikidataservice
    - run: mvn clean verify --batch-mode
      working-directory: webapp

  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: webapp
        file: webapp/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/arquisoft/wichat_en3a/webapp:latest

  docker-push-userservice:
    name: Push user service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: userservice
        file: userservice/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/arquisoft/wichat_en3a/userservice:latest

  docker-push-hintservice:
    name: Push llm service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: hintservice
        file: hintservice/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/arquisoft/wichat_en3a/hintservice:latest

  docker-push-wikidataservice:
    name: Push wikidata service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Multi-Arch Image
      uses: docker/build-push-action@v5
      with:
        context: wikidataservice
        file: wikidataservice/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/arquisoft/wichat_en3a/wikidataservice:latest

  deploy:
    name: Deploy over SSH
    runs-on: ubuntu-latest
    needs: [docker-push-userservice,docker-push-hintservice,docker-push-wikidataservice,docker-push-webapp]
    steps:
    - name: Deploy over SSH
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        command: |
          wget https://raw.githubusercontent.com/arquisoft/wichat_en3a/master/docker-compose.yml -O docker-compose.yml
          echo "HINTSERVICE_API_KEY=${{ secrets.LLM_API_KEY }}" > .env
          docker compose --profile prod down
          docker compose --profile prod up -d --pull always
