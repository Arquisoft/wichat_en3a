services:
  mongodb:
    container_name: mongodb-wichat_en3a
    image: mongo
    profiles: ["dev", "prod"]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mynetwork

  userservice:
    container_name: userservice-wichat_en3a
    image: ghcr.io/arquisoft/wichat_en3a/userservice:latest
    profiles: ["dev", "prod"]
    build: ./userservice
    depends_on:
      - mongodb
    ports:
      - "8100:8100"
    networks:
      - mynetwork
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/users

  wikidataservice:
    container_name: wikidataservice-wichat_en3a
    image: ghcr.io/arquisoft/wichat_en3a/wikidataservice:latest
    profiles: ["dev", "prod"]
    build: ./wikidataservice
    depends_on:
      - mongodb
    ports:
      - "8101:8101"
    networks:
      - mynetwork
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/questions

  hintservice:
    container_name: hintservice-wichat_en3a
    image: ghcr.io/arquisoft/wichat_en3a/hintservice:latest
    profiles: ["dev", "prod"]
    build: 
      context: ./hintservice
    ports:
      - "8200:8200"
    environment:
      - LLM_APIKEY=${HINTSERVICE_API_KEY}
    networks:
      - mynetwork

  webapp:
    container_name: webapp-wichat_en3a
    image: ghcr.io/arquisoft/wichat_en3a/webapp:latest
    profiles: ["dev", "prod"]
    build: ./webapp
    depends_on:
        - mongodb
        - userservice
    environment:
        - USERSERVICE_URL=http://userservice:8100
    ports:
      - "8000:8000"
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    depends_on:
      - webapp
    networks:
      - mynetwork

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mynetwork

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - loki
    networks:
      - mynetwork

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    networks:
      - mynetwork


volumes:
  mongodb_data:
  grafana-storage:

networks:
  mynetwork:
    driver: bridge
